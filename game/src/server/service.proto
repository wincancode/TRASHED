syntax = "proto3";

package server;


option go_package = "Trashed/proto";



service GameService {
  rpc CreateGame (Empty) returns (GameCode);
  rpc JoinGame (PlayerData) returns (stream GameData);
  rpc JoinInputUpdates(stream PlayerState) returns(stream GameState);
  rpc StartGame(GameCode) returns(BoolMessage);
}


message BoolMessage{
  bool value = 1;
}

message GameCode{
  string code = 1;
}

message PlayerState{
    string code = 1;
    string player_uuid = 2;
    int64 timestamp = 3;    //For sync
    Input input = 5;
    Position position = 6;
}

message Position{
    double x = 1;
    double y = 2;
    double angle = 3;
    double speedX = 4;
    double speedY = 5;
    double accelerationX = 6;
    double accelerationY = 7;
}


message Input{
    bool move = 1;
    bool stride_left = 2;
    bool stride_right = 3;
    bool stop = 4;
    bool is_shoot =5;  
}


message PlayerData{
    string player_uuid = 1;
    int64 timestamp = 2;     //For sync
    string username = 3;
    string color = 4;
    int32 slot = 5;
    string game_code= 6; // CÃ³digo de la partida a la que se une
    bool ready = 7;   
}

message GameState{
  map<string, PlayerState> playerStates = 1; 
}

message GameData {
  string code = 1;                     // Unique game code
  repeated PlayerData players = 2;     // List of players in the game
  bool started = 4;
}

message Empty{}